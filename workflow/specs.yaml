openapi: 3.0.3 
info:
  title: Workflow Managemant Specification
  version: 1.0.0
  description: Workflow Managemant API specification

servers:
  - url: '{protocol}://{ip}:{port}/{base-api}'
    variables:
      protocol:
        enum:
          - http
          - https
        default: http
      ip:
        enum:
          - localhost
          - 34.199.12.114 
        default: localhost
      port:
        enum:
          - '9000'
          - '5057'
        default: '9000'
      base-api:
        enum:
          - api
        default: api
tags: 
  - name: Project
    description: perform operations on Project Table
  - name: resources
    description: APIs for resources
paths:
  
  /getAllProjects:
    get:
      tags: 
        - Project
      summary: Get all projects
      operationId: getProjectList
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProjectDTO'
        '404':
          description: "Service Not found"
        '500':
          description: "Internal Server Error"
          
  /getAllProjectsWithFilter:
    parameters:
      - in: query
        name: status
        schema:
          type: string
        required: true
    get:
      tags: 
        - Project
      summary: Get all projects
      operationId: getProjectWithFilter
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProjectDTO'
        '404':
          description: "Service Not found"
        '500':
          description: "Internal Server Error"

  /projects/{projectId}/usecases:
    parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: integer
          description: The ID of the project
        - in: query
          name: startDate
          required: true
          schema:
            type: string
            format: date
          description: The start date for filtering use cases
        - in: query
          name: endDate
          required: true
          schema:
            type: string
            format: date
          description: The end date for filtering use cases
    get:
      tags: 
        - Projects
      summary: get usecases details of a specific Projects
      operationId: get_oneProjects_countusecase
      responses:
        200:
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProjectDTO'
        400:
          description: "Service Not found"
        500:
          description: "Internal Server Error"
  /projects/usecases:
    parameters:
        - in: query
          name: startDate
          required: true
          schema:
            type: string
            format: date
          description: The start date for filtering use cases
        - in: query
          name: endDate
          required: true
          schema:
            type: string
            format: date
          description: The end date for filtering use cases
    get:
      tags: 
        - Projects
      summary: get all Projects
      operationId: get_projects
      responses:
        200:
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProjectDTO'
        400:
          description: "Service Not found"
        500:
          description: "Internal Server Error"

  /resource:
    get:
      tags:
        - resource
      summary: get all resources of all project
      operationId: get all resources
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Resource'
        '400':
          description: Bad Request
          content:
            application/json:
              example:
                message: "Invalid value for 'progress'"
        '500':
          description: Internal server error
  /resourcewithfilter:
    get:
      tags:
        - resourcewithfilter
      summary: get all resources by project status
      parameters:
        - name: status
          in: query
          description: Progress status (string)
          required: true
          schema:
            type: string
            enum:
              - completed
              - inProgress
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Resource'
        '400':
          description: Bad Request
          content:
            application/json:
              example:
                message: "Invalid value for 'progress'"
        '500':
          description: Internal server error

components:
  schemas:
  
    ProjectDTO:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        total_usecases:
          type: integer
          format: int64
        total_resources:
          type: integer
          format: int64
        status:
          type: string
        project_manager:
          type: string
        project_description:
          type: string
        department:
          type: string
        start_date:
          type: string
        end_date:
          type: string
        budget:
          type: string

    Resource:
      type: object
      properties:
        name:
          type: string
        manager_name:
          type: string
        created:
          type: string
        due:
          type: string
        total_substages:
          type: string
        project_status:
          type: string       
           
    


