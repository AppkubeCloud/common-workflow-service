service: workflow-lambda

frameworkVersion: '3'

useDotenv: true

plugins:
  - serverless-offline

provider:
  name: aws
  stage: dev
  timeout: 15
  runtime: nodejs18.x
  region: us-east-1

functions:

  getProjectOverview:
    handler: project/getProjectOverview.getProjectOverview 
    role: ${env:LAMBDA_ROLE}
    events:
    - http:
        path: /project_usecase_overview
        method: get
        cors: true

  getAllProjectsOverview:
    handler: project/getAllProjectsOverview.getAllProjectsOverview 
    role: ${env:LAMBDA_ROLE}
    events:
    - http:
        path: /projects_usecase_overview
        method: get
        cors: true

  allresources:
    handler: getallresources.getallresource
    role: ${env:LAMBDA_ROLE}
    events:
    - http:
        path: /allresource
        method: get

  allresourcesbyfilter:
    handler: getallresourcebyfilter.getallresourcebyfilter
    role: ${env:LAMBDA_ROLE}
    events:
    - http:
        path: /allresourcebyfilter
        method: get

  getOrgProjectDetails:
    handler: getOrgProjectDetails.getOrgProjectDetails
    role: ${env:LAMBDA_ROLE}
    events:
      - httpApi:
          path: /org_projects_overview
          method: get

  getOrgAllProjectStatusDetails:
    handler: getOrgAllProjectStatusDetails.getOrgAllProjectStatusDetails
    role: ${env:LAMBDA_ROLE}
    events:
      - httpApi:
          path: /org_projects_status_overview
          method: get
  
  # allProject
  getProjects:
    handler: allProject/getProjects.getProjects 
    role: ${env:LAMBDA_ROLE}
    events:
    - http:
        path: /projects
        method: get
        cors: true

  getResources:
    handler: resource/getResources.getResources
    role: ${env:LAMBDA_ROLE}
    events:
      - http:
          path: /resources
          method: get
          cors: true

  getProjectsOverview:
    handler: project/getProjectsOverview.getProjectsOverview
    role: ${env:LAMBDA_ROLE}
    events:
      - httpApi:
          path: /projects_overview
          method: get    

  getResourcesTasksStatus:
    handler: project/getResourcesTasksStatus.getResourcesTasksStatus
    role: ${env:LAMBDA_ROLE}
    events:
    - http:
        path: /resource_task_status
        method: get
        cors: true
 
  getAllResourcesTasksStatus:
    handler: project/getAllResourcesTasksStatus.getAllResourcesTasksStatus
    role: ${env:LAMBDA_ROLE}
    events:
    - http:
        path: /resources_task_status
        method: get
        cors: true    

  getProjectsUsecases:
    handler: usecase/getProjectsUsecases.getProjectsUsecases
    role: ${env:LAMBDA_ROLE}
    events:
    - http:
        path:  /projects/usecases
        method: get
        cors: true 

  getProjectsUsecaseByName:
    handler: usecase/getProjectsUsecaseByName.getProjectsUsecaseByName
    role: ${env:LAMBDA_ROLE}
    events:
    - http:
        path: /projects/usecases/{name}
        method: get
        cors: true 

  usecase_search:
    handler: usecase/usecase_search.usecase_search
    role: ${env:LAMBDA_ROLE}
    events:
    - http:
        path: /searchusecase
        method: get
        cors: true 
##searchbargetresourcebyname
  getResourcesByName:
    handler: resource/getResourcesByName.getResourcesByName
    role: ${env:LAMBDA_ROLE}
    events:
    - http:
        path: /get_resource_by_name
        method: get
        cors: true
  
  # addProject
  addProject:
    handler: addProject/addProject.addProject
    role: ${env:LAMBDA_ROLE}
    events:
    - http:
        path: /addProject
        method: post
        cors: true
  #addusecase
  addusecases:
    handler: usecase/addusecase.addusecase
    role: ${env:LAMBDA_ROLE}
    events:
      - http:
          path: /project/usecases/new
          method: post
          cors: true
  # stages
  stageDetailsForCreatingUsecase:
    handler: stages/stageDetailsForCreatingUsecase.stageDetailsForCreatingUsecase
    role: ${env:LAMBDA_ROLE}
    events:
    - http:
        path: /project/usecases/stage_details
        method: get
        cors: true

  addusecases:
    handler: usecase/assignUsecase.assignUsecase
    role: ${env:LAMBDA_ROLE}
    events:
      - http:
          path: /project/usecases/assign_stage
          method: put
          cors: true
